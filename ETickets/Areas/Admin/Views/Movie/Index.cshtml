@model IEnumerable<MoviesWithCategoriesWithCinemasVM>
<div class="container col-12">
    <div class="row mb-4 align-items-center">
        <div class="col-md-6">
            <h2 class="display-6 mb-0">All Movies</h2>
        </div>
        <div class="col-md-6 text-md-end">
            <a asp-area="Admin" asp-controller="Movie" asp-action="Create"
               class="btn btn-primary">
                <i class="fas fa-plus me-2"></i>Add New Movie
            </a>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="table-responsive">
                <table class="table table-striped table-hover align-middle">
                    <thead class="table-light">
                        <tr>
                            <th scope="col" width="5%">#</th>
                            <th scope="col">Movie Name</th>
                            <th scope="col">Description</th>
                            <th scope="col">Price</th>
                            <th scope="col">Categories</th>
                            <th scope="col">Cinema</th>
                            <th scope="col" width="15%" class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int counter = 1;
                        }
                        @foreach (var item in Model)
                        {
                            <tr>
                                <th scope="row">@(counter++)</th>
                                <td>@item.Name</td>
                                 <td> 
                                     @if (!string.IsNullOrEmpty(item.Description)) 
                                     {
                                        <span class="bio-preview"
                                              data-bs-toggle="tooltip"
                                              data-bs-placement="top"
                                              title="@item.Description">
                                            @if (!string.IsNullOrEmpty(item.Description))
                                            {
                                                @(item.Description.Length > 50 ? item.Description[..Math.Min(80, item.Description.Length)] + "..." : item.Description)
                                            }
                                            else
                                            {
                                                <span class="text-muted">No description available</span>
                                            }
                                        </span>
                                     } 
                                     else 
                                     { 
                                         <span class="text-muted">No Description available</span> 
                                     } 
                                 </td> 
                                <td>@item.Price</td>
                                <td>@item.Categories</td>
                                <td>@item.Cinemas</td>
                                <td class="text-center">
                                    <div class="btn-group" role="group">
                                        <a asp-area="Admin" asp-controller="Movie" asp-action="Edit" asp-route-id="@item.Id"
                                           class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-edit"></i> Edit
                                        </a>
                                        <a asp-area="Admin" asp-controller="Movie" asp-action="Delete" asp-route-id="@item.Id"
                                           class="btn btn-sm btn-outline-danger ms-2 delete-btn">
                                            <i class="fas fa-trash"></i> Delete
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Toastr CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet" />

    <!-- Toastr JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>

    <script>
        $(document).ready(function() {
            // Initialize toastr with default options
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": true,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };

            // Check for TempData messages
            @if (TempData["Success"] != null)
            {
                    var successParts = TempData["Success"].ToString().Split('|');
                    var successMessage = successParts[0];
                    var successTitle = successParts.Length > 1 ? successParts[1] : "Success";
                    <text>
                    toastr.success('@Html.Raw(successMessage)', '@Html.Raw(successTitle)');
                    </text>
            }

            @if (TempData["Error"] != null)
            {
                    var errorParts = TempData["Error"].ToString().Split('|');
                    var errorMessage = errorParts[0];
                    var errorTitle = errorParts.Length > 1 ? errorParts[1] : "Error";
                    <text>
                    toastr.error('@Html.Raw(errorMessage)', '@Html.Raw(errorTitle)');
                    </text>
            }
        });
            <!-- Add SweetAlert2 CSS and JS -->
        <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        $(document).ready(function() {
            // Delete button click handler
            $('.delete-btn').on('click', function(e) {
                e.preventDefault();
                var deleteUrl = $(this).attr('href');

                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = deleteUrl;
                    }
                });
            });

            // Toastr initialization and handling (keep your existing code)
            toastr.options = {
                "closeButton": true,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "timeOut": "5000"
            };

            @if (TempData["Success"] != null)
            {
                    <text>
                    toastr.success('@Html.Raw(TempData["Success"].ToString().Split('|')[0])',
                                  '@(TempData["Success"].ToString().Split('|').Length > 1 ?
                                                                Html.Raw(TempData["Success"].ToString().Split('|')[1]) : "Success")');
            </text>
                }

            @if (TempData["Error"] != null)
            {
                    <text>
                    toastr.error('@Html.Raw(TempData["Error"].ToString().Split('|')[0])',
                                '@(TempData["Error"].ToString().Split('|').Length > 1 ?
                                                            Html.Raw(TempData["Error"].ToString().Split('|')[1]) : "Error")');
            </text>
                }
        });
    </script>
}